<?php defined('CORENINPAGE') or die('Hack!');
//todo: 1. конфиг includes, excludes, чтобы фильтровать по идентификатору, и протоколировать не все, а только нужные коды
//todo: 1. два конфига: список ид событий, которые мы пишем (масками?), и список,
//todo:    который мы исключаем. в итоге пишем множество (ALL*included)-excluded.
//todo:    если included не задан, считаем что не пишем ничего (иначе подавимся). ???
//todo:    если excluded не задан, ничего не исключаем из того, что пишем.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class logger_database_0_table_absent extends exception {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class logger_database_0 extends module implements dbaware
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected $autocreate;

protected $disabled;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function __construct ($configs)
{
	parent::__construct($configs);

	$this->autocreate = isset($configs['autocreate']) ? $configs['autocreate'] : null;

	$this->disabled = false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function core_event ($args)
{
	if (!$this->disabled)
	{
		try
		{
			core::db('write', $args);
		}
		catch (logger_database_0_table_absent $exception)
		{
			if ($this->autocreate)
			{
				core::db('create');
				try
				{
					core::db('write', $args);
				}
				catch (logger_database_0_table_absent $exception)
				{
					$this->disabled = true;
					throw $exception;
				}
			} else
			{
				$this->disabled = true;
				throw $exception;
			}
		}
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

?>