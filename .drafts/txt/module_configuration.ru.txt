
ПРИНЦИП
=======
Конфигурирование модулей задается простой таблицей <имя модуля, имя конфига, значение конфига>,
которая читается в движке базы данных по запросу прямо из ядра (главного класса).

Никаких других надстроек над конфигурационной таблицей быть не должно. То есть никаких конфигов
по пакетам модулей, никаких все-сайтовых конфигов. Такие надстройки только снижают быстродействие
необходимостью делать дополнительные запросы в базу данных, либо необходимостью делать в базе
union-запросы (практика показала что union из трех запросов работает даже медленнее, чем три
отдельных запроса). В плане конфигурирования приоритет отдается быстроте чтения и обработки
конфигов (что делается в каждом запросе), а не удобству их задания (что делается единожды).

Конфиги всегда непустые и непробельные строки. Любые конфиги с пустой строкой или только
с пробельными символами (пробел, перевод строки, табуляция) за конфиги не считаются и в
конструктор модуля не подаются. Другие же конфиги подаются в конструктор после обрезания
пробельным символов с начала о конца строки. Оставляю за собой право в будущем сокращать
несколко подряд идущих пробельных символов внутри значения конфига на один символ пробела.
Ибо конфиги не для вывода красоты, а для передачи значений.


ИМЕНОВАНИЕ КОНФИГОВ
===================
Имена конфигов выбирает разработчик модуля. Крайне рекомендуется чтобы имена конфигов были
корректными php-идентификаторами, то есть содержали только символы латинского алфавита,
арабские цифры и знак подчеркивания; причем символы желательно держать только в нижнем регистре.
Это нужно для того, чтобы имена конфигов как можно более соответствовали полям и переменным,
в которых будут храниться их значения в php. Просто по стилистическим причинам.

Если модуль содержит конфиг, соответствующий по смыслу какому-либо рекомендованному имени
(см. ниже), то следует использовать это рекомендованное имя, а не отсебятину. Так модули
станут значительно понятнее для чтения.


РЕКОМЕНДОВАННЫЕ ИМЕНА
=====================
silent		- не создавать событий о достижении состояния (не касается событий-запросов и директив)
hidden		- не выводить xml данные
prefix		- в выводимых данных использовать такой префикс тегов для обозначения namespace
name_for_XXX	- помечать выводимые данные в ситуации XXX именем (coren:name)
slot_for_XXX	- помечать выводимые данные в ситуации XXX слотом (coren:slot)
event_for_XXX	- имя события, которое выкидывать для ситуации XXX (включая состояни, запросы и директивы)
dir_path	- использовать каталог по указанному пути 
dir_strict	- (логическое) отсчитывать указанный путь каталога только от корня сайта; иначе - от корня ФС
dir_create	- автоматически создавать каталог, если его нет
dir_umask	- umask для создания каталога
