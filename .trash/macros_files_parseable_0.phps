<?php defined('COREINPAGE') or die('Hack!');

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if (!core::depend('macros_files_0')) return;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class macros_files_parseable_0 extends macros_files_0
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function __construct ($configs)
{
	parent::__construct($configs);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected function find_file ($filesdir, $category, $value, $item, $extension)
{
	$rootdir = $filesdir . '/' . $category . '/' . $value . '/';
	$result = $this->find_item($rootdir, '', explode('_', $item), $extension);
	return is_null($result) ? null : $rootdir . $result . $extension;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected function find_item ($rootdir, $prefix, $parts, $extension)
{
//???	var_dump($rootdir . $prefix . implode('_', $parts) . $extension); echo "<br>\n";
	$candidate = $prefix . implode('_', $parts);
	if (file_exists($rootdir . $candidate . $extension))
		return $candidate;

	$l_parts = array();
	$r_parts = $parts;

	$result = null;
	while (!empty($r_parts) && is_null($result))
	{
		array_push($l_parts, array_shift($r_parts));
		$newprefix = $prefix . implode('_', $l_parts) . '/';
		$result = $this->find_item($rootdir, $newprefix, $r_parts, $extension);
	}
	return $result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

?>