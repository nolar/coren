<?php defined('COREINPAGE') or die('Hack!');

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if (!core::depend('macros_files_parseable_0')) return;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class macros_files_cacheable_0 extends macros_files_parseable_0
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected $cachedir;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function __construct ($configs)
{
	parent::__construct($configs);

	$this->cachedir = isset($configs['cachedir']) ? $configs['cachedir'] : null;
	if (!isset($this->cachedir)) throw new exception('misconfig: cachedir');
	else $this->cachedir = core::normalize_path($this->cachedir, SITEPATH);//??? or COREPATH?
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected function find_file ($filesdir, $category, $value, $item, $extension)
{
	$cachedir = $this->cachedir . '/' . $category . '/' . $value;
	$cachefile = $cachedir . '/' . $item;
	if (file_exists($cachefile))
	{
		if (filesize($cachefile) == 0) return null;
		$cachedata = file_get_contents($cachefile);
		$cachedata = $filesdir . '/' . $category . '/' . $value . '/' . $cachedata . $extension;
		if (is_file($cachedata)) return $cachedata;
	}

	$rootdir = $filesdir . '/' . $category . '/' . $value . '/';
	$result = $this->find_item($rootdir, '', explode('_', $item), $extension);
	$this->__mkdirs__($cachedir, 0777);
	file_put_contents($cachefile, is_null($result) ? '' : $result, LOCK_EX);
	return is_null($result) ? null : $rootdir . $result . $extension;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

private function __mkdirs__ ($path, $mode = 0777)
{
	if (!file_exists($path))
		return $this->__mkdirs__(dirname($path), $mode) && mkdir($path, $mode);
	else
		return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

?>