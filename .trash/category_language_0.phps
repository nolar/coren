<?php defined('COREINPAGE') or die('Hack!');

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class category_language_0 extends module
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected $category;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function __construct ($configs)
{
	parent::__construct($configs);

	$this->category = isset($configs['category']) ? $configs['category'] : null;
	if (!isset($this->category)) throw new exception('misconfig_category');
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function core_init ($args)
{
	if (!isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) return;
	$values = $_SERVER['HTTP_ACCEPT_LANGUAGE'];

	// Parse header into hash with language codename as key and preferability koefficient (q) as value.
	// Typical format is something like "en, ru;q=0.9, es;q=0.8" and so on. Absent 'q' mean 1.0.
	$languages = array();
	$values = split(',', $values);
	foreach ($values as $value)
	{
		$p1 = strpos($value, ';');
		if ($p1 === false)
		{
			$languages[trim($value)] = (double) 1;
		} else
		{
			$p2 = strpos($value, 'q=', $p1);
			if ($p2 === false)
			{
				$languages[trim(substr($value, 0, $p1))] = (double) 1;
			} else
			{
				$p3 = strpos($value, ';', $p2+2);
				if ($p3 === false)
				{
					$languages[trim(substr($value, 0, $p1))] = (double) trim(substr($value, $p2+2));
				} else
				{
					$languages[trim(substr($value, 0, $p1))] = (double) trim(substr($value, $p2+2, $p3-($p2+2)));
				}
			}
		}
	}
	arsort($languages, SORT_NUMERIC);

	foreach ($languages as $language => $preference)
		core::category($this->category, $language);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

?>