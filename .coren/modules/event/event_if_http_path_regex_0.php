<?php defined('CORENINPAGE') or die('Hack!');
####################################################################################################
####################################################################################################
####################################################################################################
#
# Модуль вызовает другой (обычно нерезидентный) модуль в реакцию на событие генерации данных,
# но только если путь в http-запросе удовлетворяет регулярному выражению (regex) либо glob-маске.
# Если путь не соответствует условиям срабатывания, то ничего никогда не вызывается.
#
# Фактически это способ с помощью одного класса (implementer'а) реализовать автоматическое
# определение какой контент на какой странице должен генерироваться. Может использоваться либо
# в обычных путях и разбросанных файлах скриптов, которые однотипно ссылаются на ядро и ничего
# сами не делают и не определяют, либо с помощью механизма mod_rewrite сервера apache.
#
# Пример для mod_rewrite:
#
# <IfModule mod_rewrite.c>
#	RewriteEngine on
#	RewriteCond %{REQUEST_FILENAME} !-f
#	RewriteCond %{REQUEST_FILENAME} !-d
#	RewriteRule ^(.*)$ index.php/$1 [L]
# </IfModule>
#
# Этот пример показывает как забросить все запросы ко всем ресурсам сайта (или подкаталога сайта)
# в один единственный файл, который ссылается на ядро. При запросе таких ресурсов ядро будет
# все видеть так, будто оно получило запрос прямым обращением к файлу в соответствующем каталоге.
# И набор модулей данного класса могут решить какие данные генерировать на основании пути в запросе,
# хотя и существует один-единственный файл скрипта в корне сайта/каталога.
#
# Этот модуль также делает некоторые различия для главного и вспомогательного контента на странице.
# Если какой-то другой модуль через систему событий заявил что он сам будет генерировать главный
# контент, а в нашем модуле тоже предплагается главный контент, то мы его уже не будем генерировать.
# С другой стороны, если контент данного модуля помечен как вспомогательный, то он будет всегда
# генерироваться вне зависимости от наличия главного контента в других модулях.
#
####################################################################################################
####################################################################################################
####################################################################################################
#
if (!coren::depend('event_if_0')) return;
#
class event_if_http_path_regex_0 extends event_if_0
{
#
####################################################################################################
####################################################################################################
####################################################################################################
#
protected $regex;
#
####################################################################################################
#
public function __construct ($configs)
{
	parent::__construct($configs);

	if (isset($configs['regex'])) $this->regex = $configs['regex'];
}
#
####################################################################################################
####################################################################################################
####################################################################################################
#
protected function evaluate (&$data)
{
	$request_uri = $_SERVER['REQUEST_URI'];//!!!todo: handle absence of variable
	$request_parsed = parse_url($request_uri);//!!!todo: handle FALSE result
	$request_path = $request_parsed['path'];
	var_dump($this->regex, $request_path);//!!!
	return preg_match($this->regex, $request_path);
}
#
####################################################################################################
####################################################################################################
####################################################################################################
}
?>